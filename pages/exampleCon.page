<apex:page controller="exampleCon">
   <apex:form >
        <!-- Define the JavaScript function sayHello-->
        <apex:actionFunction name="sayHello" action="{!sayHello}" rerender="out" status="myStatus"/>
    </apex:form>

    <apex:outputPanel id="out">
    <apex:outputText value="Hello "/>
    <apex:actionStatus startText="requesting..." >
        <apex:facet name="stop">{!username}</apex:facet>
    </apex:actionStatus>
    </apex:outputPanel>
            
    <!-- Call the sayHello JavaScript function using a script element-->
    <script>window.setTimeout(sayHello,1000)</script>
            
    <p><apex:outputText value="Clicked? {!state}" id="showstate" /></p> 
            
    <!-- Add the onclick event listener to a panel. When clicked, the panel triggers
    the methodOneInJavascript actionFunction with a param -->
    <apex:outputPanel onclick="methodOneInJavascript('Yes!')" styleClass="btn"> 
        Click Me 
    </apex:outputPanel>
    <apex:form >

    <apex:actionFunction action="{!methodOne}" name="methodOneInJavascript" rerender="showstate">
        <apex:param name="firstParam" assignTo="{!state}" value="" />
    </apex:actionFunction>
    </apex:form>  
    <apex:form >
      <apex:outputText value="wache Count {!Count}" id="Counter" />
      <apex:actionStatus startText="Incrementing()"  stopText="Done" id="CounterStatus"></apex:actionStatus>
      <apex:actionPoller action="{!IncrementCounter}" reRender="Counter" interval="5" status="CounterStatus"/>
      
    </apex:form>
    <apex:form >
     <apex:outputPanel id="Counter">
     <apex:outputText value="ClickMe {!Count}" />
      <apex:actionSupport event="onclick" action="{!IncrementCounter}"  reRender="Counter" status="CounterStatus" /> 
      </apex:outputPanel>
      <apex:actionStatus id="CounterStatus" startText="Incrementing" stopText="Done"></apex:actionStatus>
    </apex:form>
</apex:page>